#Zeros create a 2d m ele of zeros and same as for other numbers
import numpy as np
np.zeros((2,3))


import numpy as np
np.ones((2,3))

#arange it prints the num from 0 to n-1 place sequentially
import numpy as np
np.arange(10)

#linspace 
import numpy as np
np.linspace(1,26,3)

#Indices 
import numpy as np
np.indices((3,3))

#Indices 
import numpy as np
np.indices((4,4))

import numpy as np
np.random.rand(3,2)

import numpy as np
np.random.rand(3,2)

import numpy as np
x=np.array([1,2,3])
print(x)

import numpy as np
np.random.randint(10,size=10)

import numpy as np
a=np.array([1,2,3])
b=np.array([1,2,3])
c=np.add(a,b)
print(c)

import numpy as np
a=np.array([1,2,3,5,8,9])
print("Actual num: ")
print(a)
print("After rev")
c=np.flip(a)
print(c)

import numpy as np
matrix = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
print("3*3 matrix")
print(matrix)
column = np.column_stack((matrix, np.zeros(3)))
row = np.vstack((column, np.ones(4)))
print("After adding column and row: ")
print(row)


import numpy as np
arr1 = np.array([1, 2, 3, 4, 5])
arr2 = np.array([2, 3, 1, 4, 5])
matchingindices = np.where(arr1 == arr2)
print(matchingindices)


import numpy as np

rand_arr = np.random.uniform(low=0, high=10, size=10)

rounded_arr = np.round(rand_arr)
print("Original Array: ", rand_arr)
print("Rounded Array: ", rounded_arr)
